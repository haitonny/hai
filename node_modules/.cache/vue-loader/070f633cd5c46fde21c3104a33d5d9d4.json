{"remainingRequest":"/Users/viethai/Downloads/vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/viethai/Downloads/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/viethai/Downloads/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/viethai/Downloads/vue/src/views/Welcome/Welcompage.vue?vue&type=template&id=7f613399&scoped=true&","dependencies":[{"path":"/Users/viethai/Downloads/vue/src/views/Welcome/Welcompage.vue","mtime":1600576235933},{"path":"/Users/viethai/Downloads/vue/node_modules/cache-loader/dist/cjs.js","mtime":1598287468254},{"path":"/Users/viethai/Downloads/vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1598287568178},{"path":"/Users/viethai/Downloads/vue/node_modules/cache-loader/dist/cjs.js","mtime":1598287468254},{"path":"/Users/viethai/Downloads/vue/node_modules/vue-loader/lib/index.js","mtime":1598287568178}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}